section(id='oocss')
  h3 Introduction
  p(data-markdown).
    L'OOCSS (**Object-Oriented CSS**) est une méthodologie CSS répandue consistant
    à approcher l'intégration d'un site en **modules** – repérer les élements visuels redondants au sein
    d'un design et les abstraire en des _morceaux_ de design réutilisables et combinables.
    Le site _Github_ propose un bon exemple d'OOCSS dans son styleguide, où l'on peut consulter l'ensemble
    des modules utilisés sur le site.
  mixin image('github.png')

section
  h3 Exemple concret
  p L'exemple le plus facile à donner en parlant d'OOCSS est le cas basique d'un bouton.
  div.row-fluid
    pre.span6
      code.sass.
        .button {
          name: Benjamin;
          color: grey;
          background: white;
        }
    div.span6
      p.btn(style='font-size:3rem;padding:.25rem 1rem ') Button
  p(data-markdown).
    Nous avons ici un module basique de bouton réutilisé partout sur le site. Si le style du bouton
    change, il changera uniformément sur l'ensemble des pages.

section
  h3 Exemple concret
  p.
    Les modules ont ensuite des variantes, et/ou des élements contenus à
    l'intérieur d'eux. Un bouton pourra par exemple être rouge pour indiquer
    une action dangereuse, ou contenir une îcone.
  div.row-fluid
    div.span6
      pre
        code.sass.
          .button.button-danger {
            backgroud: red;
          }
      pre
        code.sass.
          .button .icon {
            margin-right: .25rem;
          }
    div.span6
      p.btn-block.btn.btn-danger(style='font-size:3rem;padding:.25rem 1rem;color:white') Button
      p.btn-block.btn(style='font-size:3rem;padding:.25rem 1rem ')
        i.icon-home(style='font-size: 3em')
        | Button

section
  h3 Conventions de nommage
  p(data-markdown).
    Dans de nombreuses implémentations de l'OOCSS, un manque de conventions de nommage
    peut rendre très vite confus un ensemble de modules. Il existe heureusement des
    conventions pour faciliter cela; la plus connue étant la norme **BEM** pour _Block, Element, Modifier_.
  div.row-fluid
    div.span4
      h5 CSS classique
      pre
        code.sass.
          a.button {
            background: white;
            color: black;
          }

          a.button.danger {
            backgroud: red;
          }

          a.button.danger i {
            margin-right: .25rem;
          }
    div.span4
      h5 OOCSS classique
      pre
        code.sass.
          .button {
            background: white;
            color: black;
          }

          .button.button-danger {
            backgroud: red;
          }

          .button .icon {
            margin-right: .25rem;
          }
    div.span4
      h5 BEM
      pre
        code.sass.
          .button {
            background: white;
            color: black;
          }

          .button--danger {
            backgroud: red;
          }

          .button__icon {
            margin-right: .25rem;
          }

section
  h3 Principe
  p.
    Le but de la norme BEM est de découpler présentation et structure.
    Dans de nombreuses intégrations CSS, on trouve des noms d'élements et/ou
    des élements enfants verrouillés à cause de la CSS :
  pre
    code.sass.
      div.user-infos {
        figure.large {
          // The User avatar
        }
      }
  p(data-markdown).
    Ce style de code empêche, d'une, d'utiliser un autre élement que `div`
    pour afficher les infos de l'utilisateur, et de deux, d'utiliser les styles
    de son avatar ailleurs que dans ses infos.

section
  h3 Les séparateurs
  p(data-markdown).
    BEM utilise alors deux séparateurs : `--` et `__`. Cela permet non seulement
    de donner des noms plus complets à une classe mais aussi de discerner directement
    quelle partie d'un module elle représente.
  div.row-fluid
    div.span4
      h5 CSS classique
      pre
        code.sass.
          div.person {}
          div.person aside {}
          div.female {}
          div.female aside.hand {}
          div.person aside.hand.left
    div.span4
      h5 OOCSS classique
      pre
        code.sass.
          .person {}
          .hand {}
          .female {}
          .female-hand {}
          .left-hand {}
    div.span4
      h5 BEM
      pre
        code.sass.
          .person {}
          .person__hand {}
          .person--female {}
          .person--female__hand {}
          .person__hand--left {}
